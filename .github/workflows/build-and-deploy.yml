on:
  push:
    branches:
    - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    # setup emscripten
    - uses: actions/checkout@v2
      with:
        repository: 'emscripten-core/emsdk'
        path: emsdk
    - run: |
        cd emsdk
        ./emsdk install sdk-1.39.13-64bit
        ./emsdk activate --embedded sdk-1.39.13-64bit
    # build ffmpeg
    - name: Cache FFmpeg binaries
      id: cache-ffmpeg
      uses: actions/cache@v1
      with:
        path: ffmpeg/built
        key: v1-${{ hashFiles('ffmpeg/build-ffmpeg.sh') }}
    - run: source ./emsdk/emsdk_env.sh && cd ffmpeg && ./build-ffmpeg.sh
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
    - run: mkdir -p ffmpeg/src
    # build application
    - name: Install dependencies
      run: yarn install
    - name: Build WASM
      run: source ./emsdk/emsdk_env.sh && mkdir -p wasm/build && cd wasm/build && emcmake cmake .. && emmake make -j
    - name: Build parcel
      run: NODE_ENV=production yarn parcel build ./src/index.html
    - name: Upload Build Result
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - name: Download Build Result
      uses: actions/download-artifact@v1
      with:
        name: dist
    # upload to dist branch
    - uses: actions/checkout@v2
      with:
        ref: dist
        path: ./dist-branch
    - run: rm -rf ./dist-branch/* && cp -r ./dist/* ./dist-branch/
    - run: |
        COMMIT=`git rev-parse HEAD`
        cd dist-branch
        git config --local user.email "41898282@users.noreply.github.com"
        git config --local user.name "GitHub Actions"
        git add -A .
        git commit --allow-empty -m "update with $COMMIT"
        git push
